- id: 1a2fb39aade3
  alias: 'Bedroom light: Wake up sunrise at the specified time'
  trigger:
  - platform: template
    value_template: '{{ states(''sensor.time'') == (state_attr(''input_datetime.wake_up_alarm'',
      ''timestamp'') | int | timestamp_custom(''%H:%M'', False)) }}'
  condition:
  - condition: and
    conditions:
    - condition: state
      entity_id: input_boolean.use_wake_up_alarm
      state: 'on'
    - condition: state
      entity_id: light.bedroom_light
      state: 'off'
  action:
  - entity_id: script.wake_up_sunrise
    service: script.turn_on
- id: 2a197cb06cf7
  alias: 'Theme: Change automatically'
  trigger:
  - event: start
    platform: homeassistant
  - entity_id: sun.sun
    platform: state
    to: above_horizon
  - entity_id: sun.sun
    platform: state
    to: below_horizon
  action:
  - data_template:
      name: "{% if states.sun.sun.state == \"above_horizon\" %}\n  My Light UI\n{%\
        \ else %}\n  My Dark UI\n{% endif %}\n"
    service_template: frontend.set_theme
- id: fd62eaf9a362
  alias: 'Flux: On when no color in dining light.'
  trigger:
  - platform: template
    value_template: '{{ not not state_attr(''light.dining_room'', ''color_temp'')
      }}'
  action:
  - entity_id: switch.flux
    service: switch.turn_on
- id: 4ad87d87a42e
  alias: 'Flux: Off when color'
  trigger:
  - platform: template
    value_template: '{{ not state_attr(''light.desktop'', ''color_temp'') }}'
  action:
  - entity_id: switch.flux
    service: switch.turn_off
- id: a682d9789788
  alias: 'Caro''s wardrobe: Turn off when closing'
  trigger:
  - entity_id: binary_sensor.caro_wardrobe_sensor
    platform: state
    to: 'off'
  condition: []
  action:
  - service: switch.turn_off
    target:
      entity_id: switch.caro_wardrobe
- id: 72ea00520f30
  alias: 'Everything: Turn off when double clicking entrance light'
  trigger:
  - entity_id: switch.entrance
    from: 'on'
    platform: state
    to: 'off'
  condition:
  - condition: template
    value_template: '{{(as_timestamp(now()) - as_timestamp(states.input_boolean.light_toggle.last_changed)
      < 1.5)}}'
  action:
  - entity_id: scene.turn_off_everything
    service: scene.turn_on
- id: d071a8006b33
  alias: 'Entrance: Set a timestamp when light turns on'
  trigger:
  - entity_id: switch.entrance
    from: 'off'
    platform: state
    to: 'on'
  action:
  - entity_id: input_boolean.light_toggle
    service: input_boolean.toggle
- id: 28c90f5faaa5
  alias: 'Entrance: Turn on when coming home'
  trigger:
  - entity_id: person.eric
    platform: state
    to: home
  - entity_id: person.caro
    platform: state
    to: home
  condition:
  - condition: time
    before: '22:15:00'
    after: 07:00:00
  action:
  - entity_id: switch.entrance,light.dining_room,light.theatre_lights
    service: homeassistant.turn_on
  mode: single
- id: badd1ec9d152
  alias: 'Everything: Turn off when away'
  trigger:
  - platform: template
    value_template: '{{ is_state(''person.eric'', ''not_home'') and is_state(''person.caro'',
      ''not_home'') }}'
  condition: []
  action:
  - entity_id: scene.turn_off_everything
    service: scene.turn_on
- id: c9f3148d9539
  alias: 'Bedroom light: Turn off everything in low light'
  trigger:
  - platform: state
    entity_id: light.bedroom
    from: 'on'
    to: 'off'
  condition:
  - condition: template
    value_template: "{{ trigger.from_state and \n   trigger.from_state.attributes.brightness\
      \ == 2 }}\n"
  action:
  - service: scene.turn_on
    target:
      entity_id: scene.turn_off_everything
  mode: single
- id: '1586909745033'
  alias: 'Curtains: Open at sunrise'
  description: ''
  trigger:
  - entity_id: sun.sun
    platform: state
    to: above_horizon
  condition:
  - condition: state
    entity_id: input_boolean.use_sunrise_curtains
    state: 'on'
  action:
  - data: {}
    entity_id: cover.curtains
    service: cover.open_cover
- id: '1586909791957'
  alias: 'Curtains: Close at sunset'
  description: ''
  trigger:
  - entity_id: sun.sun
    platform: state
    to: below_horizon
  condition:
  - condition: state
    entity_id: input_boolean.use_sunrise_curtains
    state: 'on'
  action:
  - data: {}
    entity_id: cover.curtains
    service: cover.close_cover
- id: '1604810073072'
  alias: Let's Encrypt Auto Renewal
  description: ''
  trigger:
  - platform: time
    at: 02:00:00
  condition:
  - condition: time
    weekday:
    - wed
    - sat
  action:
  - service: hassio.addon_start
    data:
      addon: core_letsencrypt
  mode: single
- id: '1608127387393'
  alias: 'Everything: Turn off when putting my phone on the charger at night'
  description: ''
  trigger:
  - platform: state
    entity_id: sensor.eric_phone_charger_type
    to: wireless
  condition:
  - condition: time
    after: '22:00:00'
    before: 04:00:00
  action:
  - scene: scene.bedtime
  mode: single
- id: '1614129859585'
  alias: 'Plants: Turn humidifier on at 9 AM'
  description: ''
  trigger:
  - platform: time
    at: 09:00:00
  condition:
  - condition: time
    weekday:
    - mon
    - tue
    - wed
    - thu
    - fri
  action:
  - service: switch.turn_on
    data: {}
    entity_id: switch.humidifier
  mode: single
- id: '1614129881005'
  alias: 'Plants: Turn off at 5 PM'
  description: ''
  trigger:
  - platform: time
    at: '17:00:00'
  condition: []
  action:
  - service: switch.turn_off
    data: {}
    entity_id: switch.humidifier
  - service: light.turn_on
    target:
      entity_id: light.plants
    data:
      brightness_pct: 25
  - service: light.turn_off
    target:
      entity_id: light.plants
  mode: single
- id: '1620346496383'
  alias: 'Bedroom: Sync under_bed with ceiling light'
  description: ''
  trigger:
  - platform: state
    entity_id: light.bedroom
  condition: []
  action:
  - service: light.turn_on
    target:
      entity_id: light.under_bed
    data:
      rgb_color: "{% set ambiance = [255, 71, 71] %}\n{% set low_light = [255, 117,\
        \ 71] %}\n{% if (state_attr('light.bedroom', 'brightness') or 0) < 5 %}\n\
        \  {{ low_light }}\n{% else %}\n  {{ ambiance }}\n{% endif %}\n"
      brightness: "{% set threshold = 200 %}\n{% if states('light.bedroom') == 'off'\
        \ or state_attr('light.bedroom', 'brightness') > threshold %}\n  0\n{% elif\
        \ (state_attr('light.bedroom', 'brightness') or 0) < 5 %}\n  90\n{% else %}\n\
        \  200\n  {# threshold - min(state_attr('light.bedroom', 'brightness'), threshold)\
        \ #}\n{% endif %}\n"
  mode: restart
- id: '1623326884562'
  alias: 'Plants: Turn grow lights on at sunrise'
  description: ''
  trigger:
  - platform: state
    entity_id: sun.sun
    to: above_horizon
  condition:
  - condition: time
    weekday:
    - mon
    - tue
    - wed
    - thu
    - fri
  action:
  - service: light.turn_on
    target:
      entity_id: light.plants
    data:
      brightness: 255
      color_temp: 158
  mode: single
- id: '1627786342308'
  alias: 'TV: Netflix'
  description: ''
  trigger:
  - platform: state
    entity_id: media_player.tv
    attribute: app_name
    to: Netflix
    for: 00:00:03
  condition: []
  action:
  - service: scene.turn_on
    target:
      entity_id: scene.netflix
    data: {}
  mode: single
- id: '1627786365787'
  alias: 'TV: Netflix off'
  description: ''
  trigger:
  - platform: state
    entity_id: media_player.tv
    attribute: app_name
    from: Netflix
    for: 00:00:03
  condition: []
  action:
  - service: scene.turn_on
    data: {}
    target:
      entity_id: scene.yellow
  mode: single
- id: '1634488309210'
  alias: 'Default color: Plants'
  description: ''
  use_blueprint:
    path: Noblewolf/default-turn-on-brightness-color-temperature-for-lights.yaml
    input:
      target_lights: light.plants
      light_color_temperature: 154
- id: '1643482972962'
  alias: 'Closet: motion'
  description: ''
  use_blueprint:
    path: freakshock88/motion_illuminance_activated_entity.yaml
    input:
      motion_sensor: binary_sensor.motion_closet
      target_entity: switch.closet
      no_motion_wait: input_number.motion_time_off
      time_limit_after: input_datetime.motion_on
      time_limit_before: input_datetime.motion_off
- id: '1643490019007'
  alias: 'Caro''s wardrobe: Turn on when opening'
  description: ''
  trigger:
  - entity_id: binary_sensor.caro_wardrobe_sensor
    platform: state
    to: 'on'
  condition: []
  action:
  - service: switch.turn_on
    target:
      entity_id: switch.caro_wardrobe
  mode: single

- id: 2a197cb06cf7
  alias: 'Theme: Change automatically'
  trigger:
  - event: start
    platform: homeassistant
  - entity_id: sun.sun
    platform: state
    to: above_horizon
  - entity_id: sun.sun
    platform: state
    to: below_horizon
  action:
  - data_template:
      name: "{% if states.sun.sun.state == \"above_horizon\" %}\n  My Light UI\n{%\
        \ else %}\n  My Dark UI\n{% endif %}\n"
    service_template: frontend.set_theme
- id: fd62eaf9a362
  alias: 'Flux: On when no color in dining light.'
  trigger:
  - platform: template
    value_template: '{{ not not state_attr(''light.desktop'', ''color_temp'') }}'
  action:
  - entity_id: switch.flux
    service: switch.turn_on
- id: 4ad87d87a42e
  alias: 'Flux: Off when color'
  trigger:
  - platform: template
    value_template: '{{ not state_attr(''light.desktop'', ''color_temp'') }}'
  action:
  - entity_id: switch.flux
    service: switch.turn_off
- id: a682d9789788
  alias: 'Caro''s wardrobe: Turn off when closing'
  trigger:
  - entity_id: binary_sensor.caro_wardrobe_sensor
    platform: state
    to: 'off'
  condition: []
  action:
  - service: switch.turn_off
    target:
      entity_id: switch.caro_wardrobe
- id: 28c90f5faaa5
  alias: 'Entrance: Turn on when coming home'
  trigger:
  - entity_id: person.eric
    platform: state
    to: home
  - entity_id: person.caro
    platform: state
    to: home
  condition: []
  action:
  - service: homeassistant.turn_on
    data: {}
    target:
      entity_id:
      - light.hall
      - switch.closet
  - service: automation.turn_on
    data: {}
    target:
      entity_id:
      - automation.bathroom_motion_2
      - automation.closet_motion
      - automation.entrance_motion
      - automation.office_turn_on_desktop_while_arriving
  mode: single
- id: badd1ec9d152
  alias: 'Everything: Turn off when away'
  trigger:
  - platform: template
    value_template: '{{ is_state(''person.eric'', ''not_home'') and is_state(''person.caro'',
      ''not_home'') }}'
  condition: []
  action:
  - entity_id: scene.turn_off_everything
    service: scene.turn_on
  - service: automation.turn_off
    data: {}
    target:
      entity_id:
      - automation.bathroom_motion_2
      - automation.closet_motion
      - automation.entrance_motion
      - automation.office_turn_on_desktop_while_arriving
- id: c9f3148d9539
  alias: 'Bedroom light: Turn off everything in low light'
  trigger:
  - platform: state
    entity_id: light.bedroom
    from: 'on'
    to: 'off'
  condition:
  - condition: template
    value_template: "{{ trigger.from_state and \n   trigger.from_state.attributes.brightness\
      \ == 2 }}\n"
  action:
  - service: scene.turn_on
    target:
      entity_id: scene.turn_off_everything
  mode: single
- id: '1586909745033'
  alias: 'Curtains: Open at sunrise'
  description: ''
  trigger:
  - entity_id: sun.sun
    platform: state
    to: above_horizon
  condition:
  - condition: state
    entity_id: input_boolean.use_sunrise_curtains
    state: 'on'
  action:
  - data: {}
    entity_id: cover.curtains
    service: cover.open_cover
- id: '1586909791957'
  alias: 'Curtains: Close at sunset'
  description: ''
  trigger:
  - entity_id: sun.sun
    platform: state
    to: below_horizon
  condition:
  - condition: state
    entity_id: input_boolean.use_sunrise_curtains
    state: 'on'
  action:
  - data: {}
    entity_id: cover.curtains
    service: cover.close_cover
- id: '1604810073072'
  alias: Let's Encrypt Auto Renewal
  description: ''
  trigger:
  - platform: time
    at: 02:00:00
  condition:
  - condition: time
    weekday:
    - wed
    - sat
  action:
  - service: hassio.addon_start
    data:
      addon: core_letsencrypt
  mode: single
- id: '1608127387393'
  alias: 'Everything: Turn off when putting my phone on the charger at night'
  description: ''
  trigger:
  - platform: state
    entity_id: sensor.eric_phone_charger_type
    to: wireless
  condition:
  - condition: time
    after: '22:00:00'
    before: 04:00:00
  action:
  - scene: scene.bedtime
  mode: single
- id: '1614129881005'
  alias: 'Plants: Turn off at 5 PM'
  description: ''
  trigger:
  - platform: time
    at: '17:00:00'
  condition: []
  action:
  - service: switch.turn_off
    data: {}
    entity_id: switch.humidifier
  - service: light.turn_on
    target:
      entity_id: light.plants
    data:
      brightness_pct: 25
  - service: light.turn_off
    target:
      entity_id: light.plants
  mode: single
- id: '1620346496383'
  alias: 'Bedroom: Sync under_bed with ceiling light'
  description: ''
  trigger:
  - platform: state
    entity_id: light.bedroom
  condition: []
  action:
  - service: light.turn_on
    target:
      entity_id: light.under_bed
    data:
      rgb_color: "{% set ambiance = [255, 71, 71] %}\n{% set low_light = [255, 117,\
        \ 71] %}\n{% if (state_attr('light.bedroom', 'brightness') or 0) < 5 %}\n\
        \  {{ low_light }}\n{% else %}\n  {{ ambiance }}\n{% endif %}\n"
      brightness: "{% set threshold = 200 %}\n{% if states('light.bedroom') == 'off'\
        \ or state_attr('light.bedroom', 'brightness') > threshold %}\n  0\n{% elif\
        \ (state_attr('light.bedroom', 'brightness') or 0) < 5 %}\n  90\n{% else %}\n\
        \  200\n  {# threshold - min(state_attr('light.bedroom', 'brightness'), threshold)\
        \ #}\n{% endif %}\n"
  mode: restart
- id: '1623326884562'
  alias: 'Plants: Turn grow lights on at sunrise'
  description: ''
  trigger:
  - platform: state
    entity_id: sun.sun
    to: above_horizon
  condition:
  - condition: time
    weekday:
    - mon
    - tue
    - wed
    - thu
    - fri
    - sat
    - sun
  action:
  - service: light.turn_on
    target:
      entity_id: light.plants
    data:
      brightness: 255
      color_temp: 158
  mode: single
- id: '1634488309210'
  alias: 'Default color: Plants'
  description: ''
  use_blueprint:
    path: Noblewolf/default-turn-on-brightness-color-temperature-for-lights.yaml
    input:
      target_lights: light.plants
      light_color_temperature: 154
- id: '1643482972962'
  alias: 'Closet: motion'
  description: ''
  use_blueprint:
    path: freakshock88/motion_illuminance_activated_entity.yaml
    input:
      motion_sensor: binary_sensor.motion_closet
      target_entity: switch.closet
      no_motion_wait: input_number.motion_time_off
      time_limit_after: input_datetime.motion_on
      time_limit_before: input_datetime.motion_off
- id: '1643490019007'
  alias: 'Caro''s wardrobe: Turn on when opening'
  description: ''
  trigger:
  - entity_id: binary_sensor.caro_wardrobe_sensor
    platform: state
    to: 'on'
  condition: []
  action:
  - service: switch.turn_on
    target:
      entity_id: switch.caro_wardrobe
  mode: single
- id: '1643521875134'
  alias: 'Theatre: Turn on when TV is on'
  description: ''
  trigger:
  - platform: device
    device_id: 1c05c6a0aaa4f4be1645832535abfd7d
    domain: media_player
    entity_id: media_player.tv
    type: playing
  condition:
  - condition: time
    before: 01:00:00
    after: '17:00:00'
  action:
  - service: light.turn_on
    target:
      entity_id: light.theatre
    data:
      brightness: 255
  mode: single
- id: '1643594926751'
  alias: 'Entrance: Button 3 turn off all'
  description: ''
  trigger:
  - platform: state
    entity_id: binary_sensor.entrance_button_3
    from: 'off'
    to: 'on'
  condition: []
  action:
  - service: scene.turn_on
    target:
      entity_id: scene.turn_off_everything
  mode: single
- id: '1643595025000'
  alias: 'Office: Turn on desktop while arriving'
  description: ''
  trigger:
  - platform: state
    entity_id: binary_sensor.motion_entrance
    to: 'on'
  condition:
  - condition: time
    after: 07:00:00
    before: '10:00:00'
    weekday:
    - mon
    - tue
    - wed
    - thu
    - fri
  action:
  - service: light.turn_on
    target:
      entity_id: light.desktop
    data:
      color_temp: 251
      brightness: 255
  mode: single
- id: '1643652849957'
  alias: 'Office wardrobe: Turn off when closing'
  description: ''
  trigger:
  - entity_id: binary_sensor.office_wardrobe_sensor
    platform: state
    to: 'off'
  condition: []
  action:
  - service: switch.turn_off
    target:
      entity_id: switch.office_wardrobe
  mode: single
- id: '1643652869790'
  alias: 'Office wardrobe: Turn on when opening'
  description: ''
  trigger:
  - entity_id: binary_sensor.office_wardrobe_sensor
    platform: state
    to: 'on'
  condition: []
  action:
  - service: switch.turn_on
    target:
      entity_id: switch.office_wardrobe
  mode: single
- id: '1643660425100'
  alias: 'Office: Turn off desktop while quitting'
  description: ''
  trigger:
  - platform: state
    entity_id: binary_sensor.motion_entrance
    to: 'on'
  condition:
  - condition: time
    after: '18:00:00'
    before: '20:00:00'
  - condition: state
    entity_id: binary_sensor.gaming_pc
    state: 'off'
  action:
  - service: light.turn_off
    target:
      entity_id: light.desktop
    data:
      transition: 3
  mode: single
- id: '1643768034083'
  alias: 'Entrance: Button 1 disables motion'
  description: ''
  trigger:
  - platform: state
    entity_id: binary_sensor.entrance_button_1
    from: 'off'
    to: 'on'
  condition: []
  action:
  - service: automation.turn_off
    data: {}
    target:
      entity_id: automation.closet_motion
  - service: switch.turn_on
    target:
      entity_id: switch.closet
    data: {}
  - delay:
      hours: 0
      minutes: 0
      seconds: 0
      milliseconds: 500
  - service: switch.turn_off
    target:
      entity_id: switch.closet
    data: {}
  - delay:
      hours: 0
      minutes: 0
      seconds: 0
      milliseconds: 500
  - service: switch.turn_on
    target:
      entity_id: switch.closet
    data: {}
  - delay:
      hours: 0
      minutes: 15
      seconds: 0
      milliseconds: 0
  - service: switch.turn_off
    target:
      entity_id: switch.closet
    data: {}
  - service: automation.turn_on
    data: {}
    target:
      entity_id: automation.closet_motion
  mode: restart
- id: '1643860305249'
  alias: 'Dining table: Sync with Kitchen island'
  description: ''
  trigger:
  - platform: state
    entity_id: light.kitchen_island
  condition:
  - condition: and
    conditions:
    - condition: template
      value_template: '{{ trigger.to_state.context.parent_id == none }}'
    - condition: template
      value_template: '{{ trigger.to_state.context.user_id == none }}'
  action:
  - choose:
    - conditions:
      - condition: template
        value_template: '{{ trigger.to_state.state == ''on'' }}'
      sequence:
      - service: light.turn_on
        data:
          brightness: '{{ state_attr(''light.kitchen_island'', ''brightness'') }}'
        target:
          entity_id: light.dining_table
    - conditions:
      - condition: template
        value_template: '{{ trigger.to_state.state == ''off'' }}'
      sequence:
      - service: light.turn_off
        target:
          entity_id: light.dining_table
        data: {}
    default: []
  mode: parallel
  max: 10
- id: '1643899203409'
  alias: 'Bathroom: Motion'
  description: ''
  trigger:
  - platform: state
    entity_id: binary_sensor.motion_bathroom
    to: 'on'
    from: 'off'
  condition:
  - condition: not
    conditions:
    - condition: state
      entity_id: vacuum.roby
      state: cleaning
  action:
  - service: light.turn_on
    data:
      brightness: '{% if state_attr("light.small_bathroom", "brightness") != None
        %}{{ state_attr("light.small_bathroom", "brightness") }}{% elif now().hour
        > 22 %}50{% elif now().hour > 20 %}100{% elif now().hour < 8 %}100{% else
        %}255{% endif %}

        '
    target:
      entity_id: light.small_bathroom
  - wait_for_trigger:
    - platform: state
      entity_id: binary_sensor.motion_bathroom
      to: 'off'
      for:
        hours: 0
        minutes: 25
        seconds: 0
      from: 'on'
    timeout: 00:35:00
  - service: light.turn_off
    data:
      transition: 3
    target:
      entity_id: light.small_bathroom
  mode: restart
- id: '1644094148476'
  alias: 'Entrance: Motion'
  description: ''
  trigger:
  - platform: state
    entity_id: binary_sensor.motion_entrance
    to: 'on'
    from: 'off'
  condition:
  - condition: time
    after: 06:00:00
    before: 01:00:00
  action:
  - service: light.turn_on
    data:
      brightness: '{% if state_attr("light.hall", "brightness") != None %}{{ state_attr("light.hall",
        "brightness") }}{% elif now().hour > 22 %}50{% elif now().hour > 20 %}100{%
        elif now().hour < 8 %}100{% else %}255{% endif %}

        '
      transition: 2
    target:
      entity_id: light.hall
  - wait_for_trigger:
    - platform: state
      entity_id: binary_sensor.motion_entrance
      from: 'on'
      to: 'off'
  - delay:
      hours: 0
      minutes: 3
      seconds: 0
      milliseconds: 0
  - service: light.turn_off
    data:
      transition: 5
    target:
      entity_id: light.hall
  mode: restart
- id: '1645234889986'
  alias: 'Bathroom: Sync cabinets with Hall/Kitchen lights'
  description: ''
  trigger:
  - platform: state
    entity_id: light.kitchen
  - platform: state
    entity_id: light.hall
  condition:
  - condition: time
    after: '16:00:00'
    before: 00:00:00
  action:
  - choose:
    - conditions:
      - condition: and
        conditions:
        - condition: state
          entity_id: light.kitchen
          state: 'off'
        - condition: state
          entity_id: light.hall
          state: 'off'
      sequence:
      - service: light.turn_off
        data:
          transition: 3
        target:
          entity_id: light.under_cabinet
    - conditions:
      - condition: state
        entity_id: light.under_cabinet
        state: 'off'
      sequence:
      - service: light.turn_on
        data:
          rgb_color:
          - 255
          - 218
          - 108
          brightness: 210
        target:
          entity_id: light.under_cabinet
    default: []
  mode: single
- id: '1645530868434'
  alias: 'Closet: Turn off light reset motion'
  description: ''
  trigger:
  - platform: state
    entity_id: switch.closet
    from: 'on'
    to: 'off'
    for:
      hours: 0
      minutes: 0
      seconds: 2
  condition:
  - condition: state
    entity_id: automation.closet_motion
    state: 'off'
  action:
  - service: automation.turn_off
    data: {}
    target:
      entity_id: automation.entrance_button_3_turn_off_all_duplicate
  - service: automation.turn_on
    data: {}
    target:
      entity_id:
      - automation.entrance_button_3_turn_off_all_duplicate
      - automation.closet_motion
  mode: single
- id: '1645757455109'
  alias: 'Office: Turn on Gamer mode'
  description: ''
  trigger:
  - platform: state
    entity_id: binary_sensor.gaming_pc
    from: 'off'
    to: 'on'
  condition: []
  action:
  - service: scene.turn_on
    data: {}
    target:
      entity_id: scene.gamer_mode
  mode: single
- id: '1645757496159'
  alias: 'Office: Turn off Gamer mode'
  description: ''
  trigger:
  - platform: state
    entity_id: binary_sensor.gaming_pc
    from: 'on'
    to: 'off'
  condition: []
  action:
  - service: light.turn_off
    data:
      transition: 3
    target:
      entity_id: light.desktop
  mode: single
- id: '1646591760545'
  alias: 'Office: Heat high'
  description: ''
  trigger:
  - platform: state
    entity_id: sensor.time
    to: 08:30
  condition:
  - condition: time
    before: 00:00:00
    weekday:
    - mon
    - tue
    - wed
    - thu
    - fri
    after: 00:00:00
  action:
  - service: climate.set_temperature
    data:
      temperature: 22
    target:
      entity_id: climate.office_thermostat
  mode: single
- id: '1646591800062'
  alias: 'Office: Heat low'
  description: ''
  trigger:
  - platform: state
    entity_id: sensor.time
    to: '23:45'
  condition: []
  action:
  - service: climate.set_temperature
    data:
      temperature: 19.5
    target:
      entity_id: climate.office_thermostat
  mode: single
- id: '1646591943644'
  alias: 'Bedroom: Heat low'
  description: ''
  trigger:
  - platform: state
    entity_id: sensor.time
    to: 00:30
  - platform: state
    entity_id: sensor.time
    to: '10:30'
  condition: []
  action:
  - service: climate.set_temperature
    data:
      temperature: 19.5
    target:
      entity_id: climate.bedroom_thermostat
  mode: single
- id: '1646592004352'
  alias: 'Bedroom: Heat high'
  description: ''
  trigger:
  - platform: state
    entity_id: sensor.time
    to: '21:30'
  - platform: state
    entity_id: sensor.time
    to: 06:45
  condition: []
  action:
  - service: climate.set_temperature
    data:
      temperature: 21.5
    target:
      entity_id: climate.bedroom_thermostat
  mode: single
- id: '1646592307267'
  alias: 'Office: Heat high weekend'
  description: ''
  trigger:
  - platform: state
    entity_id: sensor.time
    to: '11:30'
  condition:
  - condition: time
    before: 00:00:00
    weekday:
    - sat
    - sun
  action:
  - service: climate.set_temperature
    data:
      temperature: 21.5
    target:
      entity_id: climate.office_thermostat
  mode: single
- id: '1646592576276'
  alias: 'Heat: Low when away'
  description: ''
  trigger:
  - platform: template
    value_template: '{{ is_state(''person.eric'', ''not_home'') and is_state(''person.caro'',
      ''not_home'') }}'
  condition: []
  action:
  - service: automation.turn_off
    data: {}
    target:
      entity_id:
      - automation.office_heat_on
      - automation.office_heat_high_weekend
      - automation.bedroom_heat_high
  - service: climate.set_temperature
    data:
      temperature: 19.5
    target:
      entity_id:
      - climate.bedroom_thermostat
      - climate.living_room_thermostat
      - climate.office_thermostat
  mode: single
- id: '1646592700362'
  alias: 'Heat: High when home'
  description: ''
  trigger:
  - platform: template
    value_template: '{{ is_state(''person.eric'', ''home'') or is_state(''person.caro'',
      ''home'') }}'
  condition:
  - condition: template
    value_template: '{{ state_attr(''automation.heat_high_when_home'', ''last_triggered'')
      < state_attr(''automation.heat_low_when_away'', ''last_triggered'') }}'
  action:
  - service: automation.turn_on
    data: {}
    target:
      entity_id:
      - automation.office_heat_high_weekend
      - automation.bedroom_heat_high
      - automation.office_heat_on
  - service: climate.set_temperature
    data:
      temperature: 20
    target:
      entity_id:
      - climate.living_room_thermostat
  mode: single

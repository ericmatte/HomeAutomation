- id: 2a197cb06cf7
  alias: 'Theme: Change automatically ✔️'
  trigger:
  - event: start
    platform: homeassistant
  - entity_id: sun.sun
    platform: state
    to: above_horizon
  - entity_id: sun.sun
    platform: state
    to: below_horizon
  action:
  - data:
      name: "{% if states.sun.sun.state == \"above_horizon\" %}\n  My Light UI\n{%\
        \ else %}\n  My Dark UI\n{% endif %}\n"
    service: frontend.set_theme
- id: 28c90f5faaa5
  alias: 'Home: Away mode'
  description: 'Disable home automations while away.

    Turn entrance lights on when arriving.'
  trigger:
  - platform: template
    value_template: '{{ is_state(''person.eric'', ''not_home'') and is_state(''person.caro'',
      ''not_home'') }}'
    id: away
  - platform: template
    value_template: '{{ is_state(''person.eric'', ''home'') }}'
  - platform: template
    value_template: '{{ is_state(''person.caro'', ''home'') }}'
  condition: []
  action:
  - service: "{% if is_state('person.eric', 'home') or is_state('person.caro', 'home')\
      \ %}\n  automation.turn_on\n{% else %}\n  automation.turn_off\n{% endif %}\n"
    data: {}
    target:
      entity_id:
      - automation.bathroom_motion_2
      - automation.closet_motion
      - automation.entrance_motion
      - automation.office_turn_on_desktop_while_arriving
      - automation.thermostats_sync_outdoor_temperature
  - choose:
    - conditions:
      - condition: trigger
        id: away
      sequence:
      - entity_id: scene.turn_off_everything
        service: scene.turn_on
    default:
    - service: homeassistant.turn_on
      data: {}
      target:
        entity_id:
        - light.hall
        - switch.closet
    - delay:
        hours: 0
        minutes: 5
        seconds: 0
        milliseconds: 0
    - condition: state
      entity_id: binary_sensor.motion_entrance
      state: 'off'
      for:
        hours: 0
        minutes: 5
        seconds: 0
    - service: homeassistant.turn_off
      data: {}
      target:
        entity_id:
        - light.hall
        - switch.closet
  mode: restart
- id: c9f3148d9539
  alias: 'Bedroom light: Turn off everything in low light ✔️'
  trigger:
  - platform: state
    entity_id: light.bedroom
    from: 'on'
    to: 'off'
  condition:
  - condition: template
    value_template: "{{ trigger.from_state and \n   trigger.from_state.attributes.brightness\
      \ == 2 }}\n"
  action:
  - service: scene.turn_on
    target:
      entity_id: scene.turn_off_everything
    data: {}
  mode: single
- id: '1586909791957'
  alias: 'Bedroom: Curtains'
  description: ''
  trigger:
  - entity_id: sun.sun
    platform: state
  condition:
  - condition: state
    entity_id: input_boolean.use_sunrise_curtains
    state: 'on'
  action:
  - choose:
    - conditions:
      - condition: state
        entity_id: sun.sun
        state: above_horizon
      sequence:
      - service: cover.open_cover
        data: {}
        target:
          entity_id: cover.curtains
    - conditions:
      - condition: state
        entity_id: sun.sun
        state: below_horizon
      sequence:
      - service: cover.close_cover
        data: {}
        target:
          entity_id: cover.curtains
    default: []
- id: '1608127387393'
  alias: 'Everything: Turn off when putting my phone on the charger ✔️'
  description: ''
  trigger:
  - platform: state
    entity_id: sensor.eric_phone_charger_type
    to: wireless
  condition:
  - condition: time
    after: '22:00:00'
    before: 04:00:00
  action:
  - scene: scene.bedtime
  mode: single
- id: '1620346496383'
  alias: 'Bedroom: Sync under_bed with ceiling light ✔️'
  description: ''
  trigger:
  - platform: state
    entity_id: light.bedroom
  condition: []
  action:
  - service: light.turn_on
    target:
      entity_id: light.under_bed
    data:
      rgb_color: "{% set ambiance = [255, 71, 71] %}\n{% set low_light = [255, 117,\
        \ 71] %}\n{% if (state_attr('light.bedroom', 'brightness') or 0) < 5 %}\n\
        \  {{ low_light }}\n{% else %}\n  {{ ambiance }}\n{% endif %}\n"
      brightness: "{% set threshold = 200 %}\n{% if states('light.bedroom') == 'off'\
        \ or state_attr('light.bedroom', 'brightness') > threshold %}\n  0\n{% elif\
        \ (state_attr('light.bedroom', 'brightness') or 0) < 5 %}\n  90\n{% else %}\n\
        \  200\n  {# threshold - min(state_attr('light.bedroom', 'brightness'), threshold)\
        \ #}\n{% endif %}\n"
  mode: restart
- id: '1623326884562'
  alias: 'Plants: Turn grow lights on at sunrise and off at 5pm ✔️'
  description: ''
  trigger:
  - platform: state
    entity_id: sun.sun
    to: above_horizon
    id: sun
  - platform: time
    at: '17:00:00'
    id: time
  condition: []
  action:
  - choose:
    - conditions:
      - condition: trigger
        id: sun
      sequence:
      - service: light.turn_on
        target:
          entity_id: light.plants
        data:
          brightness: 255
          color_temp: 158
    - conditions:
      - condition: trigger
        id: time
      sequence:
      - service: light.turn_off
        data: {}
        target:
          entity_id: light.plants
    default: []
  mode: single
- id: '1643482972962'
  alias: 'Closet: motion ✔️'
  description: ''
  use_blueprint:
    path: freakshock88/motion_illuminance_activated_entity.yaml
    input:
      motion_sensor: binary_sensor.motion_closet
      target_entity: switch.closet
      no_motion_wait: input_number.motion_time_off
      time_limit_after: input_datetime.motion_on
      time_limit_before: input_datetime.motion_off
- id: '1643521875134'
  alias: 'Theatre: Turn on when TV is on ✔️'
  description: ''
  trigger:
  - platform: device
    device_id: 1c05c6a0aaa4f4be1645832535abfd7d
    domain: media_player
    entity_id: media_player.tv
    type: turned_on
  condition:
  - condition: time
    before: 01:00:00
    after: '17:00:00'
  action:
  - service: light.turn_on
    target:
      entity_id: light.theatre
    data:
      brightness: 255
  mode: single
- id: '1643594926751'
  alias: 'Entrance: Button 3 turn off all ✔️'
  description: ''
  trigger:
  - platform: state
    entity_id: binary_sensor.entrance_button_3
    from: 'off'
    to: 'on'
  condition: []
  action:
  - service: scene.turn_on
    target:
      entity_id: scene.turn_off_everything
    data: {}
  mode: single
- id: '1643595025000'
  alias: 'Office: Turn on desktop while arriving ✔️'
  description: ''
  trigger:
  - platform: state
    entity_id: binary_sensor.motion_entrance
    to: 'on'
  condition:
  - condition: time
    after: 07:00:00
    before: '10:00:00'
    weekday:
    - mon
    - tue
    - wed
    - thu
    - fri
  action:
  - service: light.turn_on
    target:
      entity_id: light.desktop
    data:
      color_temp: 251
      brightness: 255
  mode: single
- id: '1643768034083'
  alias: 'Entrance: Button 1 disables motion ✔️'
  description: ''
  trigger:
  - platform: state
    entity_id: binary_sensor.entrance_button_1
    from: 'off'
    to: 'on'
  condition: []
  action:
  - service: automation.turn_off
    data: {}
    target:
      entity_id: automation.closet_motion
  - service: switch.turn_on
    target:
      entity_id: switch.closet
    data: {}
  - delay:
      hours: 0
      minutes: 0
      seconds: 0
      milliseconds: 500
  - service: switch.turn_off
    target:
      entity_id: switch.closet
    data: {}
  - delay:
      hours: 0
      minutes: 0
      seconds: 0
      milliseconds: 500
  - service: switch.turn_on
    target:
      entity_id: switch.closet
    data: {}
  - delay:
      hours: 0
      minutes: 15
      seconds: 0
      milliseconds: 0
  - service: switch.turn_off
    target:
      entity_id: switch.closet
    data: {}
  - service: automation.turn_on
    data: {}
    target:
      entity_id: automation.closet_motion
  mode: restart
- id: '1643860305249'
  alias: 'Dining table: Sync with Kitchen island ✔️'
  description: ''
  trigger:
  - platform: state
    entity_id: light.kitchen_island
  condition:
  - condition: template
    value_template: '{{ trigger.to_state.context.parent_id == none }}'
  - condition: template
    value_template: '{{ trigger.to_state.context.user_id == none }}'
  action:
  - choose:
    - conditions:
      - condition: template
        value_template: '{{ trigger.to_state.state == ''on'' }}'
      sequence:
      - service: light.turn_on
        data:
          brightness: '{{ state_attr(''light.kitchen_island'', ''brightness'') }}'
        target:
          entity_id: light.dining_table
    - conditions:
      - condition: template
        value_template: '{{ trigger.to_state.state == ''off'' }}'
      sequence:
      - service: light.turn_off
        target:
          entity_id: light.dining_table
        data: {}
    default: []
  mode: parallel
  max: 10
- id: '1643899203409'
  alias: 'Bathroom: Motion ✔️'
  description: ''
  trigger:
  - platform: state
    entity_id: binary_sensor.motion_bathroom
    to: 'on'
    from: 'off'
  condition:
  - condition: not
    conditions:
    - condition: state
      entity_id: vacuum.roby
      state: cleaning
  - condition: state
    entity_id: light.small_bathroom
    state: 'off'
    for:
      hours: 0
      minutes: 1
      seconds: 0
  action:
  - service: light.turn_on
    data:
      brightness: '{% if state_attr("light.small_bathroom", "brightness") != None
        %}{{ state_attr("light.small_bathroom", "brightness") }}{% elif now().hour
        > 22 %}200{% elif now().hour > 20 %}180{% elif now().hour < 2 %}1{% elif now().hour
        < 8 %}200{% else %}255{% endif %}

        '
    target:
      entity_id: light.small_bathroom
  - wait_for_trigger:
    - platform: state
      entity_id: binary_sensor.motion_bathroom
      to: 'off'
      for:
        hours: 0
        minutes: 30
        seconds: 0
      from: 'on'
    timeout: 00:35:00
  - service: light.turn_off
    data:
      transition: 3
    target:
      entity_id: light.small_bathroom
  mode: restart
- id: '1644094148476'
  alias: 'Entrance: Motion ✔️'
  description: ''
  trigger:
  - platform: state
    entity_id: binary_sensor.motion_entrance
    to: 'on'
    from: 'off'
  condition:
  - condition: time
    after: 06:00:00
    before: 01:00:00
  action:
  - service: light.turn_on
    data:
      brightness: '{% if state_attr("light.hall", "brightness") != None %}{{ state_attr("light.hall",
        "brightness") }}{% elif now().hour > 22 %}80{% elif now().hour > 20 %}100{%
        elif now().hour < 8 %}100{% else %}255{% endif %}

        '
      transition: 2
    target:
      entity_id: light.hall
  - wait_for_trigger:
    - platform: state
      entity_id: binary_sensor.motion_entrance
      from: 'on'
      to: 'off'
  - delay:
      hours: 0
      minutes: 3
      seconds: 0
      milliseconds: 0
  - service: light.turn_off
    data:
      transition: 5
    target:
      entity_id: light.hall
  mode: restart
- id: '1645234889986'
  alias: 'Bathroom: Sync cabinets with Hall/Kitchen lights ✔️'
  description: ''
  trigger:
  - platform: state
    entity_id: light.kitchen
  - platform: state
    entity_id: light.hall
  condition:
  - condition: time
    after: '16:00:00'
    before: 00:00:00
  action:
  - choose:
    - conditions:
      - condition: and
        conditions:
        - condition: state
          entity_id: light.kitchen
          state: 'off'
        - condition: state
          entity_id: light.hall
          state: 'off'
      sequence:
      - service: light.turn_off
        data:
          transition: 3
        target:
          entity_id: light.under_cabinet
    - conditions:
      - condition: state
        entity_id: light.under_cabinet
        state: 'off'
      sequence:
      - service: light.turn_on
        data:
          rgb_color:
          - 255
          - 218
          - 108
          brightness: 210
        target:
          entity_id: light.under_cabinet
    default: []
  mode: single
- id: '1645530868434'
  alias: 'Closet: Turn off light reset motion ✔️'
  description: ''
  trigger:
  - platform: state
    entity_id: switch.closet
    from: 'on'
    to: 'off'
    for:
      hours: 0
      minutes: 0
      seconds: 2
  condition:
  - condition: state
    entity_id: automation.closet_motion
    state: 'off'
  action:
  - service: automation.turn_off
    data: {}
    target:
      entity_id: automation.entrance_button_3_turn_off_all_duplicate
  - service: automation.turn_on
    data: {}
    target:
      entity_id:
      - automation.entrance_button_3_turn_off_all_duplicate
      - automation.closet_motion
  mode: single
- id: '1646591760545'
  alias: 'Office: Heat high'
  description: ''
  trigger:
  - platform: state
    entity_id: sensor.time
    to: 08:30
  condition:
  - condition: time
    before: 00:00:00
    weekday:
    - mon
    - tue
    - wed
    - thu
    - fri
    after: 00:00:00
  action:
  - service: climate.set_temperature
    data:
      temperature: 22
    target:
      entity_id: climate.office_thermostat
  - delay:
      hours: 3
      minutes: 0
      seconds: 0
      milliseconds: 0
  - choose:
    - conditions:
      - condition: state
        entity_id: binary_sensor.eric_mbp_active
        state: 'off'
        for:
          hours: 3
          minutes: 0
          seconds: 0
      - condition: state
        entity_id: binary_sensor.gaming_pc
        for:
          hours: 3
          minutes: 0
          seconds: 0
        state: 'off'
      sequence:
      - service: climate.set_temperature
        data:
          temperature: 19.5
        target:
          entity_id: climate.office_thermostat
    default: []
  mode: restart
- id: '1646591800062'
  alias: 'Office: Heat low'
  description: ''
  trigger:
  - platform: state
    entity_id: binary_sensor.eric_mbp_active
    to: 'off'
    from: 'on'
  - platform: state
    entity_id: binary_sensor.gaming_pc
    from: 'on'
    to: 'off'
  - platform: time
    at: '23:45:00'
  condition:
  - condition: state
    entity_id: binary_sensor.eric_mbp_active
    state: 'off'
  - condition: state
    entity_id: binary_sensor.gaming_pc
    state: 'off'
  action:
  - service: climate.set_temperature
    data:
      temperature: 19.5
    target:
      entity_id: climate.office_thermostat
  mode: single
- id: '1646592307267'
  alias: 'Office: Heat high weekend'
  description: ''
  trigger:
  - platform: state
    entity_id: sensor.time
    to: '11:30'
  condition:
  - condition: time
    before: 00:00:00
    weekday:
    - sat
    - sun
    after: 00:00:00
  action:
  - service: climate.set_temperature
    data:
      temperature: 21.5
    target:
      entity_id: climate.office_thermostat
  mode: single
- id: '1646592576276'
  alias: 'Heat: Low when away'
  description: ''
  trigger:
  - platform: template
    value_template: '{{ is_state(''person.eric'', ''not_home'') and is_state(''person.caro'',
      ''not_home'') }}'
  condition: []
  action:
  - service: automation.turn_off
    data: {}
    target:
      entity_id:
      - automation.office_heat_on
      - automation.office_heat_high_weekend
      - automation.bedroom_heat_high
  - service: climate.set_temperature
    data:
      temperature: 19.5
    target:
      entity_id:
      - climate.bedroom_thermostat
      - climate.living_room_thermostat
      - climate.office_thermostat
  mode: single
- id: '1646592700362'
  alias: 'Heat: High when home'
  description: ''
  trigger:
  - platform: template
    value_template: '{{ is_state(''person.eric'', ''home'') or is_state(''person.caro'',
      ''home'') }}'
  condition:
  - condition: template
    value_template: '{{ state_attr(''automation.heat_high_when_home'', ''last_triggered'')
      < state_attr(''automation.heat_low_when_away'', ''last_triggered'') }}'
  action:
  - service: automation.turn_on
    data: {}
    target:
      entity_id:
      - automation.office_heat_high_weekend
      - automation.bedroom_heat_high
      - automation.office_heat_on
  - service: climate.set_temperature
    data:
      temperature: 20
    target:
      entity_id:
      - climate.living_room_thermostat
  mode: single
- id: '1646680887309'
  alias: 'Office: Heat high PC on'
  description: ''
  trigger:
  - platform: state
    entity_id: binary_sensor.eric_mbp_active
    to: 'on'
    from: 'off'
  - platform: state
    entity_id: binary_sensor.gaming_pc
    from: 'off'
    to: 'on'
  condition: []
  action:
  - service: climate.set_temperature
    data:
      temperature: 22
    target:
      entity_id: climate.office_thermostat
  mode: single
- id: '1646710305446'
  alias: 'Office: Desktop light sync with PC ✔️'
  description: ''
  trigger:
  - platform: state
    entity_id: binary_sensor.eric_mbp_active
  - platform: state
    entity_id: binary_sensor.gaming_pc
  - platform: state
    entity_id: binary_sensor.macbook
    from: 'on'
    to: 'off'
    id: mbp_ping
  condition:
  - condition: template
    value_template: '{{ trigger.to_state.state != trigger.from_state.state }}'
  - condition: not
    conditions:
    - condition: and
      conditions:
      - condition: trigger
        id: mbp_ping
      - condition: state
        entity_id: binary_sensor.eric_mbp_active
        state: 'off'
  action:
  - choose:
    - conditions:
      - condition: state
        entity_id: binary_sensor.gaming_pc
        state: 'on'
      sequence:
      - service: scene.turn_on
        data: {}
        target:
          entity_id: scene.gamer_mode
    - conditions:
      - condition: state
        entity_id: binary_sensor.eric_mbp_active
        state: 'on'
      - condition: not
        conditions:
        - condition: state
          entity_id: binary_sensor.macbook
          state: 'off'
      sequence:
      - service: light.turn_on
        data:
          color_temp: 251
          brightness: 255
        target:
          entity_id: light.desktop
    default:
    - service: homeassistant.turn_off
      data: {}
      target:
        entity_id:
        - light.desktop
  mode: single
- id: '1646710431195'
  alias: 'Office: Wardrobe light from sensor ✔️'
  description: ''
  trigger:
  - platform: state
    entity_id: binary_sensor.office_wardrobe_sensor
  condition: []
  action:
  - choose:
    - conditions:
      - condition: state
        entity_id: binary_sensor.office_wardrobe_sensor
        state: 'on'
      sequence:
      - service: switch.turn_on
        data: {}
        target:
          entity_id: switch.office_wardrobe
    default:
    - service: switch.turn_off
      data: {}
      target:
        entity_id: switch.office_wardrobe
  mode: single
- id: '1646710542220'
  alias: 'Plants: Wardrobe light from sensor ✔️'
  description: ''
  trigger:
  - platform: state
    entity_id: binary_sensor.caro_wardrobe_sensor
  condition: []
  action:
  - choose:
    - conditions:
      - condition: state
        entity_id: binary_sensor.caro_wardrobe_sensor
        state: 'on'
      sequence:
      - service: switch.turn_on
        data: {}
        target:
          entity_id: switch.caro_wardrobe
    default:
    - service: switch.turn_off
      data: {}
      target:
        entity_id: switch.caro_wardrobe
  mode: single
- id: '1646933996426'
  alias: 'Bedroom: Sync climate ✔️'
  description: ''
  trigger:
  - platform: state
    entity_id: climate.bedroom_thermostat
    attribute: temperature
    id: bedroom
  - platform: state
    entity_id: climate.small_bathroom_thermostat
    attribute: temperature
    id: bathroom
  condition:
  - condition: template
    value_template: '{{ trigger.to_state.context.parent_id == none }}'
  action:
  - choose:
    - conditions:
      - condition: trigger
        id: bedroom
      sequence:
      - service: climate.set_temperature
        data:
          temperature: '{{ state_attr(''climate.bedroom_thermostat'', ''temperature'')
            }}

            '
        target:
          entity_id: climate.small_bathroom_thermostat
    - conditions:
      - condition: trigger
        id: bathroom
      sequence:
      - service: climate.set_temperature
        data:
          temperature: '{{ state_attr(''climate.small_bathroom_thermostat'', ''temperature'')
            }}

            '
        target:
          entity_id: climate.bedroom_thermostat
    default: []
  mode: single
- id: '1648313126065'
  alias: 'Office: Desktop flux ✔️'
  description: ''
  use_blueprint:
    path: ericmatte/flux_light.yaml
    input:
      light_target: light.desktop
      flux_switch: switch.desktop_flux
- id: '1648313564753'
  alias: 'Dining table: Flux ✔️'
  description: ''
  use_blueprint:
    path: ericmatte/flux_light.yaml
    input:
      light_target: light.dining_table
      flux_switch: switch.dining_table_flux
- id: '1648320672728'
  alias: 'Bedroom: Heat intervals ✔️'
  description: ''
  use_blueprint:
    path: ericmatte/heat_intervals.yaml
    input:
      time_low_2: 00:30:00
      climate_target:
        entity_id:
        - climate.bedroom_thermostat
        - climate.small_bathroom_thermostat
      time_low_1: 09:00:00
      time_high_2: '22:00:00'
      time_high_1: 06:45:00
      low_temp: 18.5
- id: '1648324723671'
  alias: 'Thermostats: Sync outdoor temperature ✔️'
  description: ''
  use_blueprint:
    path: ericmatte/climate_outdoor_temperature.yaml
    input:
      device_id_1: 11
      device_id_2: 12
      device_id_3: 13
      device_id_4: 14
      temperature_input: weather.home
- id: '1648330845926'
  alias: 'Thermostats: Away/Eco mode'
  description: ''
  use_blueprint:
    path: ericmatte/heat_away_eco_mode.yaml
    input:
      eco_mode_boolean: input_boolean.heat_eco_mode
      outside_temp: weather.home
      climate_target:
        entity_id:
        - climate.small_bathroom_thermostat
        - climate.living_room_thermostat
        - climate.bedroom_thermostat
        - climate.office_thermostat
      automations:
        entity_id:
        - automation.bedroom_heats
        - automation.living_room_heat_on
      person_1: person.eric
      person_2: person.caro
- id: '1648331331944'
  alias: 'Living room: Heat on ✔️'
  description: ''
  trigger:
  - platform: time
    at: 08:00:00
  condition: []
  action:
  - service: climate.set_temperature
    data:
      temperature: 20
    target:
      entity_id: climate.living_room_thermostat
  mode: single

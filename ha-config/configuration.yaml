homeassistant:
  # Name of the location where Home Assistant is running
  name: Home
  # Location required to calculate the time the sun rises and sets
  latitude: !secret latitude
  longitude: !secret longitude
  # Impacts weather/sunrise data (altitude above sea level in meters)
  elevation: !secret elevation
  # metric for Metric, imperial for Imperial
  unit_system: metric
  # Pick yours from here: http://en.wikipedia.org/wiki/List_of_tz_database_time_zones
  time_zone: America/Toronto
  customize: !include customize.yaml

# Enables the frontend
frontend:
  #javascript_version: latest
  themes: !include themes.yaml

# Database cleaning
recorder:
  purge_keep_days: 7
  purge_interval: 7

# Disable safe warnings
logger:
  default: warning
  logs:
    homeassistant.components.switch.command_line: critical
    requests.packages.urllib3.connectionpool: critical
    requests.exceptions.ConnectionError: critical
    homeassistant.components.camera: critical
    aiohttp.server: critical
    hbmqtt.broker: critical

# Enables configuration UI
config:

# Google Assistant Integration
google_assistant:
  project_id: !secret google_assistant_project_id
  # client_id: !secret google_assistant_client_id
  # access_token: !secret google_assistant_access_token
  # agent_user_id: !secret email
  api_key: !secret google_assistant_api_key
  exposed_domains:
    - switch
    - light
  entity_config:
    switch.live_cam:
      expose: false
    switch.google_assistant:
      expose: false

# Server security config
http:
  api_password: !secret http_password
  base_url: !secret domain
  ssl_certificate: !secret ssl_fullchain
  ssl_key: !secret ssl_privkey
  ip_ban_enabled: True
  login_attempts_threshold: 5
  trusted_networks:
    - 127.0.0.1
    - ::1
    - 192.168.0.0/24

# device_tracker:
#     - platform: gpslogger
#       password: logThatP0s1t10n
#   - platform: nmap_tracker
#     interval_seconds: 30
#     consider_home: 480
#     track_new_devices: yes
#     hosts: 192.168.1.200-201

ifttt:
  key: !secret ifttt_key

notify:
  - name: html5
    platform: html5
    gcm_api_key: !secret gcm_server_key
    gcm_sender_id: !secret gcm_sender_id

# Text to speech
tts:
  platform: google

# Embedded Broker Server
mqtt:
  discovery: true
  password: !secret http_password

# Z-Wave USB stick
zwave:
  usb_path: /dev/ttyACM0

# Checks for available updates
updater:

# Discover some devices automatically
discovery:

# Allows you to issue voice commands from the frontend in enabled browsers
conversation:

# Enables support for tracking state changes over time.
history:

# View all events in a logbook
logbook:

# Track the sun
sun:

# digital_ocean:
#   access_token: !secret digital_ocean_access_token

sensor:
  - platform: time_date
    display_options:
      - 'time'
      - 'date'
  # Https certificates validation
  - platform: cert_expiry
    scan_interval: 86400 # 1 time/day
    host: !secret pi_domain
    name: !secret pi_domain
  - platform: cert_expiry
    host: !secret personal_domain
    name: !secret personal_domain
  # Weather Prediction
  - platform: yr
    scan_interval: 3600 # 1 time/hour
    monitored_conditions:
      - temperature
  - platform: moon
  # Raspberry Pi Monitor
  - platform: systemmonitor
    resources:
      - type: memory_free
      - type: processor_use
      - type: last_boot
      - type: since_last_boot
      - type: disk_use_percent
        arg: /home
      - type: disk_free
        arg: /home
  # # Teksavvy
  # - platform: teksavvy
  #   scan_interval: 21600 # 4 times/day
  #   api_key: !secret teksavvy_api_key
  #   total_bandwidth: 200
  #   monitored_variables:
  #     - usage
  #     - usage_gb
  #     - onpeak_remaining
  #     - offpeak_total
  # Google Home Text Display
  - platform: mqtt
    state_topic: "home-assistant/google-home"
    name: "Google Input Text:"
  - platform: mqtt
    state_topic: "home-assistant/google-home-datetime"
    name: "Recognized at"
  # Cat Litter Checker
  - platform: template
    sensors:
      cat_litter:
        friendly_name: "State"
        value_template: >-
          {% if states.counter.poopy_counter.state == '0' %}
            Clean
          {% elif states.counter.poopy_counter.state == '1' %}
            A little dirty
          {% elif states.counter.poopy_counter.state == '2' %}
            Could be changed
          {% else %}
            Need to be changed
          {% endif %}

camera:
 - platform: mjpeg
   mjpeg_url: http://localhost:8081
   name: Live Cam

switch:
  - platform: flux
    mode: mired
    disable_brightness_adjust: True
    lights:
      - light.dining_room
      - light.hue_light_1
  - platform: rpi_rf
    gpio: 17
    switches:
      eric_desktop:
        protocol: !secret zap_protocol
        pulselength: !secret zap_pulselength
        code_on: !secret zap_switch1_on
        code_off: !secret zap_switch1_off
        signal_repetitions: !secret zap_signal_repetition
      caro_desktop:
        protocol: !secret zap_protocol
        pulselength: !secret zap_pulselength
        code_on: !secret zap_switch2_on
        code_off: !secret zap_switch2_off
        signal_repetitions: !secret zap_signal_repetition
      rainbow_lights:
        protocol: !secret zap_protocol
        pulselength: !secret zap_pulselength
        code_on: !secret zap_switch4_on
        code_off: !secret zap_switch4_off
        signal_repetitions: !secret zap_signal_repetition
      cell_charger_eric:
        protocol: !secret zap_protocol
        pulselength: !secret zap_pulselength
        code_on: !secret zap_switch5_on
        code_off: !secret zap_switch5_off
        signal_repetitions: !secret zap_signal_repetition
      ac:
        protocol: !secret zap_protocol
        pulselength: !secret zap_pulselength
        code_on: !secret zap_switch3_on
        code_off: !secret zap_switch3_off
        signal_repetitions: !secret zap_signal_repetition
  - platform: command_line
    switches:
      google_assistant:
        friendly_name: Google Assitant
        command_on: sudo systemctl start googlehome.service
        command_off: sudo systemctl stop googlehome.service
        command_state: systemctl is-active googlehome.service
        value_template: '{{ value == "active" }}'
      live_cam:
        friendly_name: Live Camera
        command_on: sudo systemctl start motion.service
        command_off: sudo systemctl stop motion.service
        command_state: systemctl is-active motion.service
        value_template: '{{ value == "active" }}'

light:
  - platform: mqtt_json
    name: "Kitchen RGB Lights"
    state_topic: "home-assistant/rgb"
    command_topic: "home-assistant/rgb/set"
    brightness: true
    color_temp: true
    rgb: true
    effect: true
    effect_list: ["ColorFade Slow", "ColorFade Fast", "Flash"]
    optimistic: false
    qos: 0

# Poopy counter
counter:
  poopy_counter:
    name: "Number of days since last change"
    initial: 0
    step: 1
    icon: mdi:paw

input_select:
  who_clean:
    name: "Who will clean it"
    options:
     - Eric
     - Carolanne
    initial: Eric
    icon: mdi:panda

binary_sensor:
  - platform: rpi_gpio
    bouncetime: 50
    ports:
      21: Kitchen Switch
      20: Kitchen motion sensor
  # - platform: digital_ocean
  #   droplets:
  #     - 'ubuntu-vps'

# Coffee machine
# input_datetime:
#   coffee_time_selector:
#     name: "Time to brew coffee"
#     has_date: false
#     has_time: true

input_boolean:
  kitchen_motion_sensor:
    name: Kitchen motion sensor
    initial: on
    icon: mdi:flash-circle
  walkin_door_sensor:
    name: Walk-in door sensor
    initial: on
    icon: mdi:flash-circle
#   coffee_activator:
#     name: "Brew coffee on selected time"
#     initial: off
#     icon: mdi:coffee

# Imports
automation: !include_dir_merge_list automation/
script: !include_dir_merge_named scripts/
group: !include groups.yaml
